var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var BeatonePlugin = /** @class */ (function (_super) {
    __extends(BeatonePlugin, _super);
    function BeatonePlugin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BeatonePlugin.prototype.connectBeatOne = function (uuid) { return cordova(this, "connectBeatOne", {}, arguments); };
    BeatonePlugin.prototype.getSteps = function () { return cordova(this, "getSteps", {}, arguments); };
    BeatonePlugin.prototype.createInstance = function () { return cordova(this, "createInstance", {}, arguments); };
    BeatonePlugin.prototype.connecTensiometer = function () { return cordova(this, "connecTensiometer", {}, arguments); };
    BeatonePlugin.prototype.startMeasurement = function () { return cordova(this, "startMeasurement", {}, arguments); };
    BeatonePlugin.prototype.getHeart = function () { return cordova(this, "getHeart", {}, arguments); };
    BeatonePlugin.prototype.getHrvData = function () { return cordova(this, "getHrvData", {}, arguments); };
    BeatonePlugin.prototype.desconnectDevice = function () { return cordova(this, "desconnectDevice", {}, arguments); };
    BeatonePlugin.pluginName = "BeatOnePlugin";
    BeatonePlugin.plugin = "cordova-plugin-BeatOnePlugin";
    BeatonePlugin.pluginRef = "window.plugins.BeatOnePlugin";
    BeatonePlugin.repo = "https://github.com/EddyVerbruggen/BeatOnePlugin-PhoneGap-Plugin";
    BeatonePlugin.platforms = ["Android", "iOS", "Windows Phone 8"];
    return BeatonePlugin;
}(IonicNativePlugin));
export { BeatonePlugin };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL0JlYXRPbmVQbHVnaW4vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBNEJyQyxpQ0FBaUI7Ozs7SUFPbEQsc0NBQWMsYUFBQyxJQUFXO0lBUTFCLGdDQUFRO0lBUVIsc0NBQWM7SUFRZCx5Q0FBaUI7SUFRakIsd0NBQWdCO0lBU2hCLGdDQUFRO0lBU1Isa0NBQVU7SUFRVix3Q0FBZ0I7Ozs7Ozt3QkE5RmxCO0VBNkJtQyxpQkFBaUI7U0FBdkMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcblxyXG4vKipcclxuICogQG5hbWUgQmVhdG9uZVBsdWdpblxyXG4gKiBAZGVzY3JpcHRpb24gVGhpcyBwbHVnaW4gYWxsb3dzIHlvdSB0byBzd2l0Y2ggdGhlIEJlYXRPbmVQbHVnaW4gLyB0b3JjaCBvZiB0aGUgZGV2aWNlIG9uIGFuZCBvZmYuXHJcbiAqXHJcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tQmVhdE9uZVBsdWdpbmAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtCZWF0T25lUGx1Z2luIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vQmVhdE9uZVBsdWdpbi1QaG9uZUdhcC1QbHVnaW4pLlxyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBCZWF0T25lUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9CZWF0T25lUGx1Z2luL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgQmVhdE9uZVBsdWdpbjogQmVhdE9uZVBsdWdpbikgeyB9XHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKiB0aGlzLkJlYXRPbmVQbHVnaW4uc3dpdGNoT24oKTtcclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnQmVhdE9uZVBsdWdpbicsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tQmVhdE9uZVBsdWdpbicsXHJcbiAgcGx1Z2luUmVmOiAnd2luZG93LnBsdWdpbnMuQmVhdE9uZVBsdWdpbicsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FZGR5VmVyYnJ1Z2dlbi9CZWF0T25lUGx1Z2luLVBob25lR2FwLVBsdWdpbicsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MgUGhvbmUgOCddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBCZWF0b25lUGx1Z2luIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIENoZWNrcyBpZiB0aGUgQmVhdE9uZVBsdWdpbiBpcyBhdmFpbGFibGVcclxuICAgKiBAcGFyYW0gdXVpZCB7c3RyaW5nfSBVVUlEIERldmljZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gc3RhdGluZyBpZiB0aGUgQmVhdE9uZVBsdWdpbiBpcyBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGNvbm5lY3RCZWF0T25lKHV1aWQ6c3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogQ2hlY2tzIGlmIHRoZSBCZWF0T25lUGx1Z2luIGlzIGF2YWlsYWJsZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gc3RhdGluZyBpZiB0aGUgQmVhdE9uZVBsdWdpbiBpcyBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGdldFN0ZXBzKCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIENoZWNrcyBpZiB0aGUgQmVhdE9uZVBsdWdpbiBpcyBhdmFpbGFibGVcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYSBib29sZWFuIHN0YXRpbmcgaWYgdGhlIEJlYXRPbmVQbHVnaW4gaXMgYXZhaWxhYmxlLlxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBjcmVhdGVJbnN0YW5jZSgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBDaGVja3MgaWYgdGhlIEJlYXRPbmVQbHVnaW4gaXMgYXZhaWxhYmxlXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiBzdGF0aW5nIGlmIHRoZSBCZWF0T25lUGx1Z2luIGlzIGF2YWlsYWJsZS5cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgY29ubmVjVGVuc2lvbWV0ZXIoKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAvKipcclxuICAgKiBDaGVja3MgaWYgdGhlIEJlYXRPbmVQbHVnaW4gaXMgYXZhaWxhYmxlXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiBzdGF0aW5nIGlmIHRoZSBCZWF0T25lUGx1Z2luIGlzIGF2YWlsYWJsZS5cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc3RhcnRNZWFzdXJlbWVudCgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2hlY2tzIGlmIHRoZSBCZWF0T25lUGx1Z2luIGlzIGF2YWlsYWJsZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gc3RhdGluZyBpZiB0aGUgQmVhdE9uZVBsdWdpbiBpcyBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGdldEhlYXJ0KCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIFxyXG4gICAvKipcclxuICAgKiBDaGVja3MgaWYgdGhlIEJlYXRPbmVQbHVnaW4gaXMgYXZhaWxhYmxlXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiBzdGF0aW5nIGlmIHRoZSBCZWF0T25lUGx1Z2luIGlzIGF2YWlsYWJsZS5cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZ2V0SHJ2RGF0YSgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAgLyoqXHJcbiAgICogQ2hlY2tzIGlmIHRoZSBCZWF0T25lUGx1Z2luIGlzIGF2YWlsYWJsZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gc3RhdGluZyBpZiB0aGUgQmVhdE9uZVBsdWdpbiBpcyBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGRlc2Nvbm5lY3REZXZpY2UoKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ==